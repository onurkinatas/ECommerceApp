// <auto-generated />
using DataAccess.Concrete.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(ECommerceAppContext))]
    [Migration("20230202221243_initial_create")]
    partial class initialcreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Concrete.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Bilgisayar",
                            Status = true
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Telefon",
                            Status = true
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Tablet",
                            Status = true
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Televizyon",
                            Status = true
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<int>("UnitsInStock")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            ProductName = "HP Laptop",
                            Status = true,
                            UnitPrice = 17000m,
                            UnitsInStock = 50
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 1,
                            ProductName = "Msi Laptop",
                            Status = true,
                            UnitPrice = 25000m,
                            UnitsInStock = 45
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 2,
                            ProductName = "Samsung S22",
                            Status = true,
                            UnitPrice = 15500m,
                            UnitsInStock = 30
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 2,
                            ProductName = "IPhone 14 Pro",
                            Status = true,
                            UnitPrice = 32000m,
                            UnitsInStock = 18
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 2,
                            ProductName = "Oppo Reno",
                            Status = true,
                            UnitPrice = 4000m,
                            UnitsInStock = 9
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 3,
                            ProductName = "Huawei Tablet",
                            Status = true,
                            UnitPrice = 3800m,
                            UnitsInStock = 11
                        },
                        new
                        {
                            ProductId = 7,
                            CategoryId = 3,
                            ProductName = "IPad Pro",
                            Status = true,
                            UnitPrice = 24000m,
                            UnitsInStock = 9
                        },
                        new
                        {
                            ProductId = 8,
                            CategoryId = 4,
                            ProductName = "LG Ultra TV",
                            Status = true,
                            UnitPrice = 43800m,
                            UnitsInStock = 11
                        },
                        new
                        {
                            ProductId = 9,
                            CategoryId = 4,
                            ProductName = "Philips 4K TV",
                            Status = true,
                            UnitPrice = 34000m,
                            UnitsInStock = 9
                        },
                        new
                        {
                            ProductId = 10,
                            CategoryId = 4,
                            ProductName = "Samsung OLed TV",
                            Status = true,
                            UnitPrice = 32340m,
                            UnitsInStock = 5
                        },
                        new
                        {
                            ProductId = 11,
                            CategoryId = 4,
                            ProductName = "Samsung Led TV",
                            Status = true,
                            UnitPrice = 35000m,
                            UnitsInStock = 11
                        },
                        new
                        {
                            ProductId = 12,
                            CategoryId = 4,
                            ProductName = "Arçelik HD TV",
                            Status = true,
                            UnitPrice = 23800m,
                            UnitsInStock = 11
                        },
                        new
                        {
                            ProductId = 13,
                            CategoryId = 4,
                            ProductName = "Beko HD TV",
                            Status = true,
                            UnitPrice = 32200m,
                            UnitsInStock = 9
                        },
                        new
                        {
                            ProductId = 14,
                            CategoryId = 4,
                            ProductName = "Asus Oled TV",
                            Status = true,
                            UnitPrice = 30300m,
                            UnitsInStock = 11
                        },
                        new
                        {
                            ProductId = 15,
                            CategoryId = 4,
                            ProductName = "Sony HD TV",
                            Status = true,
                            UnitPrice = 29200m,
                            UnitsInStock = 9
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Product", b =>
                {
                    b.HasOne("Entities.Concrete.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Entities.Concrete.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
